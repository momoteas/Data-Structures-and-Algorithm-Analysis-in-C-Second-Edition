> 散列表的实现常常叫做散列（hashing)。散列是一种用于以常数平均时间执行插入，删除和查找的技术。但是，那些需要元素间任何排序信息的操作将不会得到支持；

5.1 一般想法：
  > 每个关键字被映射到从0到TableSize-1这个范围中的某个数，并且被放到适当的单元中。这个映射就叫做散列函数（hash function)，理想情况下它应该运算
    简单并且应该保证任何两个不同的关键字映射到不同的单元。不过，这是不可能的，应为单元的数目是有限的，而关键字实际上是用不完的；
  > 剩下的问题则是选择一个函数，决定当两个关键字散列到同一个值的时候（称为冲突（colision))应该做什么以及如何确定散列表的大小；
  
5.2 散列函数：
  > 好的办法通常是保证表的大小是素数（仅能被1和自身整除）；
  > 通常，关键字是字符串；在这种情形下，散列函数需要仔细地选择；
  > Horner法则：
  > 剩下的主要编程细节是解决冲突的消除问题。如果当一个元素插入处另一个元素已经存在（散列值相同），那么就产生一个冲突，这个冲突需要消除。解决这种冲突
    的方法有几种，我们将讨论其中最简单的两种：分离链接法和开放定址法；
    
5.3 分离链接法：
  > 











