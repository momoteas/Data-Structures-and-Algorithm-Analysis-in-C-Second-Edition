3.3 栈ADT:
    3.3.1 栈模型
    3.3.2 栈的实现：
        1. 两个流行的方法：指针，数组； 
        2. 栈的链表实现：表顶插入实现push和pop；
        3. 栈的数组实现：避免使用指针，并且可能是更流行的解决方案；
                        唯一潜在危害是需要提前声明一个数组的大小；       
                        错误检查：对空栈的pop和对满栈的push;
                        定义一个结构体，该结构体包含TopOfStack域和Capacity域，一旦知道最大容量，则该栈即可被动态地确定；
3.4 队列ADT:
    3.4.1 队列模型：末端（rear）插入，开头（front）删除；
    3.4.2 队列的数组实现：队列为空时 Rear = Front - 1;
                         以一种结构的方式：struct QueueRecord{
                                             int Capcacity;
                                             int Front;
                                             int Rear;
                                             int Size;
                                             ElementType *Array;
                                          };

                        
